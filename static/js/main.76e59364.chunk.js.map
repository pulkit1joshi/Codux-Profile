{"version":3,"sources":["Components/Users/SubComponents/forms.js","actions/userActions.js","Components/Users/SubComponents/nav.js","Components/Users/UserInfo.js","actions/links.js","actions/types.js","Components/SubComponents/Graph.js","Components/Users/RatingHistory.js","Components/SubComponents/HBar.js","Components/SubComponents/Bar.js","Components/SubComponents/PieChart.js","Components/Users/SubComponents/List.js","Components/Users/UserSubmissions.js","Components/Users/Users.js","actions/cfactions.js","Components/Contests/SubComponents/contestitem.js","Components/Contests/Upcoming.js","Components/Contests/Type/Div1.js","Components/Contests/Type/Div2.js","Components/Contests/Type/Div3.js","Components/Contests/Type/global.js","Components/Contests/Format/Cf.js","Components/Contests/Format/Ioi.js","Components/Contests/Format/Icpc.js","Components/Contests/Home.js","Components/Contests/ContestInfo.js","Components/Main.js","Reducers/userReducer.js","Reducers/cfReducer.js","Reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","state","name","onChange","bind","e","this","setState","target","value","className","type","id","placeholder","to","Component","groupBy","data","key","reduce","storage","item","group","push","Nav","onClick","clicked","UserInfo","string","match","params","username","fetchUser","Fragment","class","style","padding","userexists","src","info","titlePhoto","alt","height","width","rank","organisation","contribution","rating","maxRank","maxRating","connect","user","userExists","ratinghist","usersubmissions","dispatch","console","log","url","trackPromise","fetch","then","res","json","userData","payload","catch","error","options","showAllTooltips","tooltips","callbacks","title","tooltipItem","plugins","datalabels","display","color","Graph","getdata","data2","labels","map","datapoint","index","datasets","label","backgroundColor","borderColor","borderWidth","RatingHistory","oldRating","getlabels","string2","fetchRatingHist","paddingTop","paddingBottom","fontSize","contestinf","href","num","data-toggle","role","aria-expanded","aria-controls","data-target","contestId","contestName","paddingLeft","maxrank","maxrankid","minrank","minrankid","maxinc","maxincid","maxdec","maxdecid","length","i","newRating","ratingData","maintainAspectRatio","scales","axisY","reversed","legend","boxWidth","HBar","coloR","dynamicColors","Math","floor","random","tags","tag","col","indexOf","position","usePointStyle","anchor","clip","clamp","PieChart","canvas","r","g","b","toString","includes","forceUpdate","ref","Pie","chartto","List","heading","UserSubmissions","string3","fetchUSubmissions","verdictinfo","marginTop","problems","verdicts","verdictcount","problemsinfo","qbyindexlist","qbyindex","languages","langdata","unsolved","solved","byverdict","submissioninfo","data3","Set","uniqueprob","question","has","problem","add","countok","countwa","countot","sumok","sumwa","sumot","maxrating","minrating","programmingLanguage","verdict","some","Object","keys","langdata2","solvedlist","sumtotal","round","problemsbytags","submissionData","groupByProb","result","byverdicts","Users","chartRef","React","createRef","path","exact","component","fetchContests","cdata","contestsData","upcom","div1","div2","div3","cf","ioi","icpc","global","contest","phase","upcoming","div1list","div2list","div3list","ioilist","icpclist","cflist","globallist","count","total","ContestItem","time","timeleft","days","link","interval","dateObj","Date","startTimeSeconds","dt","unix","getTime","getMonth","getDate","getYear","toLocaleString","hour","minute","hour12","setInterval","hours","min","formattedTime","str","clearInterval","isLoggedIn","renderAuthButton","Upcoming","fetched","scope","upcominglist","Div1","Div1list","Div2","Div2list","Div3","Div3list","Global","Globallist","CFLIST","CFLISTlist","Ioilist","Ioilistlist","Icpclist","Icpclistlist","Home","counts","ContestInfo","margin","Main","initialState","lastOnlineTimeSeconds","friendOfCount","handle","avatar","registrationTimeSeconds","initialstate","contestlist","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","LoadingIndicator","usePromiseTracker","promiseInProgress","justifyContent","alignItems","App","aria-label","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.76e59364.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './from.css';\n\nclass Form extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n        };\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"row text-center\">\n                <div className=\"col-sm-2\"></div>\n                <div className=\"col-sm-8\">\n                    <form>\n\n                        <input type=\"text\" name=\"name\" className=\"form-control form-control \" id=\"ip1\" value={this.state.name} placeholder=\"Your Handle Here\" onChange={this.onChange} /><br /><br />\n                        <Link to={`/user/${this.state.name}/info`}><button type=\"submit\" className=\"btn btn-dark\">Get Data</button></Link>\n                        <br />\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Form;\n","import { FETCH_USER, FETCH_RATINGHIST, FETCH_USUBMISSIONS } from './types';\nimport { userstatus, userrating, userinfo } from './links';\nimport { trackPromise } from 'react-promise-tracker';\n\nexport const fetchUser = string => dispatch => {\n  console.log(\"User fetched\");\n  const url = userinfo + string;\n  trackPromise(\n    fetch(url)\n      .then(res => res.json())\n      .then(userData =>\n        dispatch({\n          type: FETCH_USER,\n          payload: userData,\n          userExists: 1\n        })\n      )\n      .catch(error => {\n        dispatch({\n          type: FETCH_USER,\n          payload: error,\n          userExists: 0\n        })\n      }));\n};\n\nvar groupBy = function (data, key) { // `data` is an array of objects, `key` is the key (or property accessor) to group by\n  // reduce runs this anonymous function on each element of `data` (the `item` parameter,\n  // returning the `storage` parameter at the end\n  return data.reduce(function (storage, item) {\n    // get the first instance of the key by which we're grouping\n\n    var group = item[key];\n\n    // set `storage` for this instance of group to the outer scope (if not empty) or initialize it\n    storage[group] = storage[group] || [];\n\n    // add this item to its group within `storage`\n    storage[group].push(item);\n    // return the updated storage to the reduce function, which will then loop through the next \n    return storage;\n  }, {}); // {} is the initial value of the storage\n}\n\nexport const fetchUSubmissions = string => dispatch => {\n  console.log('Submissions Fetched');\n  const url = userstatus + string;\n  trackPromise(\n    fetch(url)\n      .then(res => res.json())\n      .then(submissionData => {\n        // .problem.tags\n        var groupByProb = function (data, key) { // `data` is an array of objects, `key` is the key (or property accessor) to group by\n          // reduce runs this anonymous function on each element of `data` (the `item` parameter,\n          // returning the `storage` parameter at the end\n          return data.reduce(function (storage, item) {\n            // get the first instance of the key by which we're grouping\n\n\n            let index = 0;\n\n            for (index = 0; index < item.problem[key].length; index++) {\n\n\n\n              var group = item.problem[key][index];\n\n              // set `storage` for this instance of group to the outer scope (if not empty) or initialize it\n              storage[group] = storage[group] || [];\n\n              // add this item to its group within `storage`\n              if (item.verdict === \"OK\") storage[group].push(item);\n            }\n            // return the updated storage to the reduce function, which will then loop through the next \n            return storage;\n          }, {}); // {} is the initial value of the storage\n        }\n        let problemsbytags = groupByProb(submissionData.result, \"tags\");\n        let tags = Object.keys(groupByProb(submissionData.result, \"tags\"));\n        let byverdicts = groupBy(submissionData.result, \"verdict\");\n        let verdicts = Object.keys(groupBy(submissionData.result, \"verdict\"));\n\n\n        dispatch({\n          type: FETCH_USUBMISSIONS,\n          payload: submissionData,\n          tags: tags,\n          byverdict: byverdicts,\n          verdicts: verdicts,\n          problemsbytags: problemsbytags,\n          name: string,\n        })\n      }\n      ));\n}\n\nexport const fetchRatingHist = string => dispatch => {\n  console.log('Rating History Fetched');\n  const url = userrating + string;\n  trackPromise(\n    fetch(url)\n      .then(res => res.json())\n      .then(ratingData =>\n        dispatch({\n          type: FETCH_RATINGHIST,\n          payload: ratingData,\n          name: string\n        })\n      ));\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Nav extends Component {\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-sm bg-light navbar-light nav-tabs\">\n                    <ul className=\"navbar-nav nav-fill mx-auto\" id=\"navid\">\n                        <li className=\"nav-item\">\n                            <Link to={`/`} className=\"nav-link\"> {\"<\"} </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to={`/user/${this.props.name}/info`} className=\"nav-link\" > Basic </Link>\n                        </li>\n                        <li className=\"nav-item\" onClick={this.clicked}>\n                            <Link to={`/user/${this.props.name}/ratinghistory`} className=\"nav-link\" > Rating History </Link>\n                        </li>\n                        <li className=\"nav-item\" onClick={this.clicked}>\n                            <Link to={`/user/${this.props.name}/submissions`} className=\"nav-link\"> Submissions </Link>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUser } from '../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport Nav from './SubComponents/nav'\n\n\nexport class UserInfo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n        };\n    }\n\n    componentDidMount() {\n        const string = this.props.match.params.username;\n        this.props.fetchUser(string);\n    }\n\n\n\n    render() {\n        return (\n\n            <React.Fragment>\n\n                <Nav name={this.props.name} />\n\n                <div class=\"jumbotron text-center\" style={{ padding: \"3rem\" }}>\n                    <strong>{this.props.name} </strong>\t<br /><br />\n                    {this.props.userexists &&\n                        <div class=\"ip\">\n                            <img src={this.props.info.titlePhoto} class=\"img-thumbnail \" alt=\"Title\" height=\"100\" width=\"100\"></img><br /><br />\n                            <ul class=\"list-group\">\n                                <li class=\"list-group-item\"><strong>Rank</strong> : {this.props.info.rank}</li>\n                                <li class=\"list-group-item\"><strong>Organisation:</strong>{this.props.info.organisation}</li>\n                                <li class=\"list-group-item\"><strong>Contributions:</strong>{this.props.info.contribution}</li>\n                                <li class=\"list-group-item\"><strong>Rating:</strong> {this.props.info.rating}</li>\n                                <li class=\"list-group-item\"><strong>Maxrank:</strong> {this.props.info.maxRank}</li>\n                                <li class=\"list-group-item\"><strong>MaxRating:</strong> {this.props.info.maxRating}</li>\n                                <br />\n                            </ul>\n                        </div>\n                    }\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nUserInfo.propTypes = {\n    fetchUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    userexists: state.user.userExists,\n    name: state.user.name,\n    info: state.user.info,\n    ratinghist: state.user.ratinghist,\n    usersubmissions: state.user.usersubmissions\n})\n\nexport default connect(mapStateToProps, { fetchUser })(UserInfo)\n","// Defines constant\nexport const userinfo = 'https://codeforces.com/api/user.info?handles=';\nexport const userrating = 'https://codeforces.com/api/user.rating?handle=';\nexport const userstatus = 'https://codeforces.com/api/user.status?handle=';\nexport const contests = 'https://codeforces.com/api/contest.list';","// Defines constant\nexport const FETCH_USER = 'FETCH_USER';\nexport const FETCH_RATINGHIST = 'FETCH_RATINGHIST'\nexport const FETCH_USUBMISSIONS = 'FETCH_USUBMISSIONS'\nexport const FETCH_CONTESTS = 'FETCH_CONTESTS'","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2'\n\nconst options = {\n\tshowAllTooltips: true,\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function (tooltipItem, data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {\n\t\tdatalabels: {\n\t\t\tdisplay: false,\n\t\t\tcolor: 'white',\n\t\t}\n\t},\n}\n\nexport default class Graph extends Component {\n\tgetdata = () => {\n\t\tvar data2 = [];\n\t\tvar labels = [];\n\t\tthis.props.data.map((datapoint, index) => {\n\t\t\tdata2.push(datapoint);\n\t\t\tlabels.push(index);\n\t\t\treturn 0;\n\t\t}\n\t\t);\n\t\tlet data = {\n\t\t\tlabels: this.props.labels,\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Rating',\n\t\t\t\t\tbackgroundColor: 'rgba(65, 142, 200, 0.2)',\n\t\t\t\t\tborderColor: 'rgba(65, 142, 200, 1)',\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdata: data2,\n\t\t\t\t},\n\t\t\t],\n\t\t}\n\t\treturn data;\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Line options={options} data={this.getdata} />\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchRatingHist } from '../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport Nav from './SubComponents/nav'\n//import Calendar from 'react-github-contribution-calendar';\nimport Graph from '../SubComponents/Graph.js'\n\n\nexport class RatingHistory extends Component {\n\n    componentDidMount() {\n        const string2 = this.props.match.params.username;\n        this.props.fetchRatingHist(string2);\n    }\n\n    getdata = () => {\n        var data2 = [];\n        this.props.ratinghist.map((datapoint, index) => {\n            data2.push(datapoint.oldRating);\n            return 0;\n        });\n        console.log(data2);\n        return data2;\n    }\n\n    getlabels = () => {\n        var data2 = [];\n        this.props.ratinghist.map((datapoint, index) => {\n            data2.push(index);\n            return 0;\n        });\n        console.log(data2);\n        return data2;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <Nav name={this.props.name} />\n\n                <div style={{ paddingTop: \"2rem\", paddingBottom: \"3rem\" }}>\n                    <div class=\"card\" >\n                        <div class=\"card-header bg-info text-white d-flex justify-content-between\">\n                            <span>Summary</span>\n\n                        </div>\n                        <div>\n                            <ul class=\"list-group list-group-flush\" style={{ fontSize: \"13px\" }}>\n\n                                {this.props.contestinf.map((datapoint, index) => (\n                                    <a href=\n                                        {`https://codeforces.com/contest/${datapoint.id}`}\n                                    >\n                                        <li class=\"list-group-item d-flex justify-content-between\"> {datapoint.name}\n                                            <span class=\"card\" style={{ padding: \"1px\" }}> {datapoint.num} </span>\n                                        </li>\n                                    </a>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                <div style={{ paddingTop: \"1rem\" }}>\n                    <Graph data={this.getdata()} labels={this.getlabels()} />\n\n                    <div style={{ paddingTop: \"2rem\", paddingBottom: \"3rem\" }}>\n                        <div class=\"card\" >\n                            <div class=\"card-header bg-info text-white d-flex justify-content-between\" data-toggle=\"collapse\" href=\"#collapseExample2\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                <span type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample2\" aria-expanded=\"false\" aria-controls=\"collapseExample2\">Contests Participated</span>\n                                <span type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample2\" aria-expanded=\"false\" aria-controls=\"collapseExample2\">\n                                    +</span>\n                            </div>\n                            <ul class=\"list-group list-group-flush collapse\" id=\"collapseExample2\" style={{ fontSize: \"13px\" }}>\n\n                                {this.props.ratinghist.map((datapoint, index) => (\n                                    <a href=\n                                        {`https://codeforces.com/contest/${datapoint.contestId}`}\n                                    >\n                                        <li class=\"list-group-item d-flex justify-content-between\"> {datapoint.contestName}\n                                            <span class=\"label\" style={{ padding: \"1px\", paddingLeft: \"10px\" }}> {datapoint.rank} </span>\n                                        </li>\n                                    </a>\n                                ))}\n                            </ul>\n                        </div>\n\n\n                    </div>\n                </div>\n\n\n            </React.Fragment>\n        )\n    }\n}\n\nRatingHistory.propTypes = {\n    fetchRatingHist: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n    let maxrank = 0;\n    let maxrankid = 0;\n    let minrank = 10000000;\n    let minrankid = 0;\n    let maxinc = 0;\n    let maxincid = 0;\n    let maxdec = 0;\n    let maxdecid = 0;\n    if (state.user.ratinghist.length === 0) minrank = 0;\n    for (let i = 0; i < state.user.ratinghist.length; i++) {\n        if (state.user.ratinghist[i].rank > maxrank) {\n            maxrank = state.user.ratinghist[i].rank;\n            maxrankid = state.user.ratinghist[i].contestId;\n        }\n        if (state.user.ratinghist[i].rank < minrank) {\n            minrank = state.user.ratinghist[i].rank;\n            minrankid = state.user.ratinghist[i].contestId;\n        }\n        if (state.user.ratinghist[i].newRating - state.user.ratinghist[i].oldRating > maxinc) {\n            maxinc = state.user.ratinghist[i].newRating - state.user.ratinghist[i].oldRating;\n            maxincid = state.user.ratinghist[i].contestId;\n        }\n        if (state.user.ratinghist[i].newRating - state.user.ratinghist[i].oldRating < maxdec) {\n            maxdec = state.user.ratinghist[i].newRating - state.user.ratinghist[i].oldRating;\n            maxdecid = state.user.ratinghist[i].contestId;\n        }\n    }\n    let contestinf = [];\n    contestinf.push({\n        name: \"Contests\",\n        num: state.user.ratinghist.length,\n        id: -1,\n    })\n    contestinf.push({\n        name: \"Maximum rank\",\n        num: maxrank,\n        id: maxrankid,\n    })\n    contestinf.push({\n        name: \"Minimum rank\",\n        num: minrank,\n        id: minrankid,\n    })\n    contestinf.push({\n        name: \"Maximum Increase\",\n        num: maxinc,\n        id: maxincid,\n    })\n    contestinf.push({\n        name: \"Maximum Decrease\",\n        num: maxdec,\n        id: maxdecid,\n    })\n    return {\n        userexists: state.user.userExists,\n        name: state.user.name,\n        ratinghist: state.user.ratinghist,\n        usersubmissions: state.user.usersubmissions,\n        contestinf: contestinf,\n    }\n}\n\nexport default connect(mapStateToProps, { fetchRatingHist })(RatingHistory)\n","import React, { Component } from 'react'\nimport { HorizontalBar } from 'react-chartjs-2'\nimport 'chartjs-plugin-datalabels';\n\nconst options = {\n    maintainAspectRatio: false,\n    scales: {\n        axisY: {\n            reversed: true,\n        },\n    },\n    showAllTooltips: true,\n    tooltips: {\n        callbacks: {\n            title: function (tooltipItem, data) {\n                return;\n            }\n        }\n    },\n    legend: {\n        display: false,\n        label:\n        {\n            boxWidth: 20,\n        }\n    },\n    plugins: {\n        datalabels: {\n            display: true,\n            color: 'white',\n        }\n    },\n}\n\nexport default class HBar extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 0,\n        }\n    }\n\n    componentDidMount() {\n        // this.forceUpdate();\n\n    }\n    getdata = () => {\n        var coloR = [];\n        if (this.props.color)\n            coloR = this.props.color;\n        var dynamicColors = function () {\n            var r = Math.floor(Math.random() * 255);\n            var g = Math.floor(Math.random() * 255);\n            var b = Math.floor(Math.random() * 255);\n            return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n        };\n\n\n        //console.log(this.props.tags);\n        var data2 = [];\n        var labels = [];\n        //console.log(this.props.tags);\n        this.props.tags.map((tag, index) => {\n            data2.push(this.props.data[tag].length)\n            labels.push(tag);\n            return 0;\n        })\n        while (coloR.length < labels.length) {\n            let col = dynamicColors();\n            //console.log(col);\n            while (coloR.indexOf(col) !== -1)\n                col = dynamicColors();\n            coloR.push(col);\n        }\n\n        let data = {\n            labels: labels,\n            datasets: [\n                {\n                    label: 'Questions',\n                    data: data2,\n                    backgroundColor: coloR,\n                    borderWidth: 0.1,\n\n                }\n            ],\n        }\n        return data;\n    }\n    render() {\n        //console.log(\"Height is:\" + this.state.height);\n        return (\n            <div>\n                <HorizontalBar data={this.getdata}\n                    height={700}\n                    options={options}\n                />\n            </div >\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport 'chartjs-plugin-datalabels';\n\nconst options = {\n    maintainAspectRatio: false,\n    scales: {\n        axisY: {\n            reversed: true,\n        },\n    },\n    showAllTooltips: true,\n    tooltips: {\n        callbacks: {\n            title: function (tooltipItem, data) {\n                return;\n            }\n        }\n    },\n    legend: {\n        display: false,\n        label:\n        {\n            boxWidth: 20,\n        }\n    },\n    plugins: {\n        datalabels: {\n            display: true,\n            color: 'white',\n        }\n    },\n}\n\nexport default class HBar extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 0,\n        }\n    }\n\n    componentDidMount() {\n        // this.forceUpdate();\n\n    }\n    getdata = () => {\n        var coloR = [];\n        if (this.props.color)\n            coloR = this.props.color;\n        var dynamicColors = function () {\n            var r = Math.floor(Math.random() * 255);\n            var g = Math.floor(Math.random() * 255);\n            var b = Math.floor(Math.random() * 255);\n            return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n        };\n\n\n        //console.log(this.props.tags);\n        var data2 = [];\n        var labels = [];\n        //console.log(this.props.tags);\n        this.props.tags.map((tag, index) => {\n            data2.push(this.props.data[tag])\n            labels.push(tag);\n            return 0;\n        })\n        while (coloR.length < labels.length) {\n            let col = dynamicColors();\n            //console.log(col);\n            while (coloR.indexOf(col) !== -1)\n                col = dynamicColors();\n            coloR.push(col);\n        }\n\n        let data = {\n            labels: labels,\n            datasets: [\n                {\n                    label: 'Questions',\n                    data: data2,\n                    backgroundColor: coloR,\n                    borderWidth: 0.1,\n\n                }\n            ],\n        }\n        return data;\n    }\n    render() {\n        //console.log(\"Height is:\" + this.state.height);\n        return (\n            <div>\n                <Bar data={this.getdata}\n                    height={500}\n                    options={options}\n                />\n            </div >\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nconst options = {\n\n\tmaintainAspectRatio: false,\n\tshowAllTooltips: true,\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function (tooltipItem, data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t},\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'right',\n\t\tlabels: {\n\t\t\tdisplay: false,\n\t\t\tusePointStyle: true,\n\t\t\tfontSize: 10,\n\t\t},\n\t},\n\tplugins: {\n\t\tdatalabels: {\n\t\t\tanchor: 'center',\n\t\t\tclip: true,\n\t\t\tclamp: true,\n\t\t\tdisplay: false,\n\t\t\tcolor: 'white',\n\t\t}\n\t},\n}\n\nexport default class PieChart extends Component {\n\n\n\tcomponentDidMount() {\n\t\tthis.forceUpdate();\n\n\t}\n\tgetdata = (canvas) => {\n\n\t\tvar coloR = [];\n\t\tif (this.props.color)\n\t\t\tcoloR = this.props.color;\n\n\t\tvar dynamicColors = function () {\n\t\t\tvar r = Math.floor(Math.random() * 255);\n\t\t\tvar g = Math.floor(Math.random() * 255);\n\t\t\tvar b = Math.floor(Math.random() * 255);\n\t\t\tr = r.toString(16);\n\t\t\tg = g.toString(16);\n\t\t\tb = b.toString(16);\n\t\t\treturn \"#\" + r + g + b;\n\t\t};\n\n\n\n\t\tvar data2 = [];\n\t\tvar labels = [];\n\t\t//console.log(this.props.tags);\n\t\t/*this.props.tags.map((tag, index) => {\n\t\t\tdata2.push(this.props.data[tag].length)\n\t\t\tlabels.push(tag);\n\t\t\treturn 0;\n\t\t})*/\n\t\t//labels = this.props.tags;\n\t\tdata2 = this.props.data;\n\n\t\tconsole.log(\"DATA:\" + data2);\n\t\twhile (coloR.length < labels.length) {\n\t\t\tlet col = dynamicColors();\n\t\t\t//console.log(col);\n\t\t\twhile (coloR.includes(col) >= 0)\n\t\t\t\tcol = dynamicColors();\n\t\t\tcoloR.push(col);\n\t\t}\n\t\tfor (let i = 0; i < this.props.tags.length; i++) {\n\t\t\tlabels.push(this.props.tags[i] + \" : \" + data2[i]);\n\t\t}\n\n\t\tlet data = {\n\t\t\tlabels: labels,\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Questions',\n\t\t\t\t\tdata: data2,\n\t\t\t\t\tbackgroundColor: coloR,\n\t\t\t\t\tborderWidth: 0.1,\n\t\t\t\t}\n\t\t\t],\n\n\n\t\t}\n\n\t\treturn data;\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Pie data={this.getdata}\n\t\t\t\t\theight={300}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tref={(Pie) => { this.chartto = Pie }}\n\t\t\t\t/>\n\t\t\t</div >\n\t\t);\n\t}\n}","import React, { Component } from 'react'\n\nexport default class List extends Component {\n    render() {\n        return (\n            <div style={{ paddingTop: \"1rem\" }}>\n                <div class=\"card\" >\n                    <div class=\"card-header bg-info text-white\">\n                        {this.props.heading}\n                    </div>\n                    <ul class=\"list-group list-group-flush\" style={{ fontSize: \"13px\" }}>\n\n                        {this.props.data.map((datapoint, index) => (\n                            <li class=\"list-group-item d-flex justify-content-between\"> {datapoint.name}\n                                <span class=\"card\" style={{ padding: \"1px\" }}> {datapoint.num} </span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUSubmissions } from '../../actions/userActions'\nimport PropTypes from 'prop-types'\nimport Nav from './SubComponents/nav'\nimport HBar from '../SubComponents/HBar'\nimport Bar from '../SubComponents/Bar'\nimport PieChart from '../SubComponents/PieChart'\nimport List from './SubComponents/List'\n//import ProblemItem from './SubComponents/problemitem'\n\nexport class UserSubmissions extends Component {\n\n    componentDidMount() {\n        const string3 = this.props.match.params.username;\n        if (string3)\n            this.props.fetchUSubmissions(string3);\n        else this.props.fetchUSubmissions(this.props.name);\n    }\n    render() {\n        let color = [\"#e74c3c\",\n            \"#2ecc71\",\n            \"#f1c40f\",\n            \"#34495e\",\n            \"#3498db\",\n            \"#95a5a6\",\n            \"#9b59b6\",\n            \"#f1c40f\",\n            \"#3448db\",\n            \"#55a5a6\",\n            \"#9b19b6\",\n            \"#f1c20f\",\n            \"#f1c42f\",\n            \"#34499a\",\n            \"#3498ad\",\n            \"#95b2a6\",\n        ]\n        return (\n            <React.Fragment>\n                <Nav name={this.props.name} />\n                <List heading=\"Submissions\" data={this.props.verdictinfo} />\n                <div className=\"card\" style={{ marginTop: \"2rem\" }}>\n                    <div class=\"card-header bg-info text-white\">\n                        Topics analysis\n                    </div>\n                    <div class=\"card-body\">\n                        <HBar tags={this.props.tags} data={this.props.problems} />\n                    </div>\n                </div>\n\n\n\n                <div className=\"card\" style={{ marginTop: \"2rem\" }}>\n                    <div class=\"card-header bg-info text-white\">\n                        Verdict Analysis\n                    </div>\n                    <div class=\"card-body\">\n\n                        <PieChart tags={this.props.verdicts} data={this.props.verdictcount} color={color} />\n                    </div>\n                </div>\n\n\n                <List heading=\"Problems Summary\" data={this.props.problemsinfo} />\n\n                <div className=\"card\" style={{ marginTop: \"2rem\" }}>\n                    <div class=\"card-header bg-info text-white\">\n                        AC analysis\n                    </div>\n                    <div class=\"card-body\">\n                        <Bar tags={this.props.qbyindexlist} data={this.props.qbyindex} />\n                    </div>\n                </div>\n\n\n                <div className=\"card\" style={{ marginTop: \"2rem\" }}>\n                    <div class=\"card-header bg-info text-white\">\n                        Languages Analysis\n                    </div>\n                    <div class=\"card-body\">\n                        <PieChart tags={this.props.languages} data={this.props.langdata} color={color} />\n\n                    </div>\n                </div>\n\n                <div style={{ paddingTop: \"2rem\" }}>\n                    <div class=\"card\" >\n                        <div class=\"card-header bg-info text-white d-flex justify-content-between\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                            <span type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">Unsolved List</span>\n                            <span type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                +</span>\n                        </div>\n                        <div class=\"collapse\" id=\"collapseExample\">\n                            <ul class=\"list-group list-group-flush\" style={{ fontSize: \"13px\" }}>\n\n                                {this.props.unsolved.map((datapoint, index) => (\n                                    <a href=\n                                        {`https://codeforces.com/contest/${datapoint.contestId}/problem/${datapoint.index}`}\n                                    >\n                                        <li class=\"list-group-item d-flex justify-content-between\"> {datapoint.name}\n                                            <span class=\"card\" style={{ padding: \"1px\" }}> {datapoint.contestId}-{datapoint.index} </span>\n                                        </li>\n                                    </a>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div style={{ paddingTop: \"2rem\", paddingBottom: \"3rem\" }}>\n                    <div class=\"card\" >\n                        <div class=\"card-header bg-info text-white d-flex justify-content-between\" data-toggle=\"collapse\" href=\"#collapseExample2\" role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                            <span type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample2\" aria-expanded=\"false\" aria-controls=\"collapseExample2\">Solved List</span>\n                            <span type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample2\" aria-expanded=\"false\" aria-controls=\"collapseExample2\">\n                                +</span>\n                        </div>\n                        <div class=\"collapse\" id=\"collapseExample2\">\n                            <ul class=\"list-group list-group-flush\" style={{ fontSize: \"13px\" }}>\n\n                                {this.props.solved.map((datapoint, index) => (\n                                    <a href=\n                                        {`https://codeforces.com/contest/${datapoint.contestId}/problem/${datapoint.index}`}\n                                    >\n                                        <li class=\"list-group-item d-flex justify-content-between\"> {datapoint.name}\n                                            <span class=\"card\" style={{ padding: \"1px\" }}> {datapoint.contestId}-{datapoint.index} </span>\n                                        </li>\n                                    </a>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment >\n        )\n    }\n}\n\nUserSubmissions.propTypes = {\n    fetchUSubmissions: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n    let data2 = [];\n    state.user.verdicts.map((tag, index) => {\n        data2.push(state.user.byverdict[tag].length)\n        return 0;\n    })\n    let submissioninfo = [];\n    let data = {\n        name: \"\",\n        num: 0,\n    };\n    data.name = \"Total Submissions\";\n    data.num = state.user.usersubmissions.length;\n    submissioninfo.push(data);\n    let data3 = {\n        name: \"\",\n        num: 0,\n    };\n    data3.name = \"Successfull Submissions\";\n    data3.num = data2[1];\n    submissioninfo.push(data3);\n\n    submissioninfo.push({\n        name: \"Unsuccessfull Submissions\",\n        num: data.num - data3.num,\n    })\n\n    submissioninfo.push({\n        name: \"Average Attempts\",\n        num: data.num / data3.num,\n    })\n    let problems = new Set();\n    let uniqueprob = [];\n    state.user.usersubmissions.map((question, index) => {\n        if (!problems.has(question.problem.name)) {\n            uniqueprob.push(question.problem);\n        }\n        problems.add(question.problem.name);\n        return 0;\n    })\n\n\n\n\n    let countok = [];\n    let countwa = [];\n    let countot = [];\n    let sumok = 0;\n    let sumwa = 0;\n    let sumot = 0;\n    let maxrating = 0;\n    let minrating = 10000000;\n    let unsolved = [];\n\n    let qbyindex = [];\n    let solved = [];\n\n    let languages = [];\n    let langdata = [];\n\n    for (let i = 0; i < state.user.usersubmissions.length; i++) {\n        if (!languages.includes(state.user.usersubmissions[i].programmingLanguage)) {\n            languages.push(state.user.usersubmissions[i].programmingLanguage);\n            langdata[state.user.usersubmissions[i].programmingLanguage] = 0;\n        }\n        else {\n            langdata[state.user.usersubmissions[i].programmingLanguage] += 1;\n        }\n\n        if (state.user.usersubmissions[i].verdict === 'OK') {\n            if (state.user.usersubmissions[i].problem.rating > maxrating) maxrating = state.user.usersubmissions[i].problem.rating;\n            if (state.user.usersubmissions[i].problem.rating)\n                sumok += state.user.usersubmissions[i].problem.rating;\n            countok.push(state.user.usersubmissions[i].problem.rating);\n            qbyindex[state.user.usersubmissions[i].problem.index[0]] = qbyindex[state.user.usersubmissions[i].problem.index[0]] + 1 || 1;\n            if (solved.some(e => e.name === state.user.usersubmissions[i].problem.name)) {\n                /* vendors contains the element we're looking for */\n                //console.log(\"YE\");\n                continue;\n\n            }\n            solved.push(state.user.usersubmissions[i].problem.name);\n\n        }\n        else if (state.user.usersubmissions[i].verdict === \"WRONG_ANSWER\") {\n            if (state.user.usersubmissions[i].problem.rating < minrating) minrating = state.user.usersubmissions[i].problem.rating;\n            if (state.user.usersubmissions[i].problem.rating)\n                sumwa += state.user.usersubmissions[i].problem.rating;\n            countwa.push(state.user.usersubmissions[i].problem.rating);\n        }\n        else {\n            if (state.user.usersubmissions[i].problem.rating < minrating) minrating = state.user.usersubmissions[i].problem.rating;\n            if (state.user.usersubmissions[i].problem.rating)\n                sumot += state.user.usersubmissions[i].problem.rating;\n            countot.push(state.user.usersubmissions[i].problem.rating);\n\n        }\n    }\n    languages = Object.keys(langdata)\n    let langdata2 = [];\n    for (let i = 0; i < languages.length; i++) {\n        langdata2.push(langdata[languages[i]]);\n    }\n\n    let solvedlist = [];\n    for (let i = 0; i < uniqueprob.length; i++) {\n        if (!solved.includes(uniqueprob[i].name)) {\n            unsolved.push(uniqueprob[i]);\n        }\n        else {\n            solvedlist.push(uniqueprob[i]);\n        }\n    }\n    let qbyindexlist = Object.keys(qbyindex);\n    let sumtotal = sumok + sumwa + sumot;\n    if (countok.length + countwa.length + countot.length > 0)\n        sumtotal /= (countok.length + countwa.length + countot.length);\n    if (countok.length > 0)\n        sumok /= countok.length;\n    if (countwa.length > 0)\n        sumwa /= countwa.length;\n    if (countot.length > 0)\n        sumot /= countot.length;\n\n    let problemsinfo = [];\n    problemsinfo.push({\n        name: \"Attempted\",\n        num: uniqueprob.length,\n    });\n    problemsinfo.push({\n        name: \"Solved\",\n        num: data2[1],\n    })\n\n    problemsinfo.push({\n        name: \"Average Difficulty\",\n        num: Math.round(sumtotal),\n    })\n\n    problemsinfo.push({\n        name: \"Solved Average Difficulty\",\n        num: Math.round(sumok),\n    })\n\n    problemsinfo.push({\n        name: \"Wrong Average Difficulty\",\n        num: Math.round(sumwa),\n    })\n    problemsinfo.push({\n        name: \"Other Verdicts Average Difficulty\",\n        num: Math.round(sumot),\n    })\n\n    problemsinfo.push({\n        name: \"Max Difficulty among solved\",\n        num: Math.round(maxrating),\n    })\n\n    problemsinfo.push({\n        name: \"Min Difficulty among unsolved\",\n        num: Math.round(minrating),\n    })\n\n    return {\n        userexists: state.user.userExists,\n        name: state.user.name,\n        usersubmissions: state.user.usersubmissions,\n        tags: state.user.tags,\n        verdicts: state.user.verdicts,\n        byverdict: state.user.byverdict,\n        problems: state.user.problemsbytags,\n        verdictinfo: submissioninfo,\n        verdictcount: data2,\n        uniqueprob: uniqueprob,\n        problemsinfo: problemsinfo,\n        unsolved: unsolved,\n        solved: solvedlist,\n        qbyindex: qbyindex,\n        qbyindexlist: qbyindexlist,\n        languages: languages,\n        langdata: langdata2,\n    }\n}\n\nexport default connect(mapStateToProps, { fetchUSubmissions })(UserSubmissions)\n/*\n{this.props.tags.map((tag, index) => {\n                        return <ProblemItem key={index} tag={tag} num={index + 1} data={this.props.problems.length} />\n                    })}\n\n{this.props.verdicts.map((tag, index) => {\n                        return <ProblemItem key={index} tag={tag} num={index + 1} data={this.props.byverdict.length} />\n                    })}\n                    */","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { HashRouter, Route } from 'react-router-dom'\nimport { Switch } from \"react-router-dom\";\n\nimport Form from './SubComponents/forms'\nimport UserInfo from './UserInfo'\nimport RatingHistory from './RatingHistory'\nimport UserSubmissions from './UserSubmissions'\n\nclass Users extends Component {\n\n  chartRef = React.createRef();\n\n  render() {\n    return (\n      <React.Fragment>\n        <HashRouter>\n          <div>\n            <div className=\"row\">\n              <div className=\"col-sm-1\"></div>\n              <div className=\"col-sm-10\">\n                <Switch>\n                  <Route path='/' exact component={Form}></Route>\n                  <Route path='/user/:username/info' exact component={UserInfo}></Route>\n                  <Route path='/user/:username/ratinghistory' exact component={RatingHistory}></Route>\n                  <Route path='/user/:username/submissions' exact component={UserSubmissions}></Route>\n                </Switch>\n              </div>\n\n            </div>\n\n          </div>\n        </HashRouter>\n      </React.Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  userexists: state.user.userExists,\n  name: state.user.name,\n  info: state.user.info,\n  ratinghist: state.user.ratinghist,\n  usersubmissions: state.user.usersubmissions\n})\n\nexport default connect(mapStateToProps, null)(Users);","\nimport { FETCH_CONTESTS } from './types';\nimport { contests } from './links';\nimport { trackPromise } from 'react-promise-tracker';\n\nexport const fetchContests = () => dispatch => {\n    console.log('Contestss Fetched');\n    const url = contests;\n    let cdata = [];\n    trackPromise(\n        fetch(url)\n            .then(res => res.json())\n            .then(contestsData => {\n                cdata = contestsData;\n                let upcom = [];\n                let div1 = [];\n                let div2 = [];\n                let div3 = [];\n                let cf = [];\n                let ioi = [];\n                let icpc = [];\n                let global = [];\n                cdata.result.map((contest, index) => {\n                    if (contest.phase === \"BEFORE\") {\n                        upcom.push(contest);\n                    }\n                    if (contest.type === \"CF\") {\n                        cf.push(contest);\n                    }\n                    else if (contest.type === \"IOI\") {\n                        ioi.push(contest);\n                    }\n                    else if (contest.type === \"ICPC\") {\n                        icpc.push(contest);\n                    }\n                    if (contest.name.includes(\"Div. 1\")) {\n                        div1.push(contest);\n                    }\n                    else if (contest.name.includes(\"Div. 2\")) {\n                        div2.push(contest);\n                    }\n                    else if (contest.name.includes(\"Div. 3\")) {\n                        div3.push(contest);\n                    }\n                    else {\n                        global.push(contest);\n                    }\n                    return 0;\n                })\n                dispatch({\n                    type: FETCH_CONTESTS,\n                    payload: cdata.result,\n                    upcoming: upcom,\n                    div1list: div1,\n                    div2list: div2,\n                    div3list: div3,\n                    ioilist: ioi,\n                    icpclist: icpc,\n                    cflist: cf,\n                    globallist: global,\n                    count: {\n                        div1: div1.length,\n                        div2: div2.length,\n                        div3: div3.length,\n                        ioi: ioi.length,\n                        icpc: icpc.length,\n                        cf: cf.length,\n                        global: global.length,\n                        upcoming: upcom.length,\n                        total: cdata.result.length,\n                    }\n                })\n            }\n            ));\n\n}","import React, { Component } from 'react'\n\nexport default class ContestItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: \"\",\n            timeleft: \"\",\n            days: \"\",\n            link: \"\",\n        }\n        this.interval = '';\n    }\n\n    componentDidMount() {\n\n        let dateObj = new Date(this.props.item.startTimeSeconds*1000);\n        function formatJSDate(dt)\n        {\n         return (dt.getMonth()+1 + '/' + dt.getDate() + '/' + (dt.getYear()+1900) + ' ' + dt.toLocaleString('en-US', { hour: 'numeric',minute:'numeric', hour12: false }));\n        }\n        let unix = new Date().getTime() / 1000;\n        let link = \"https://codeforces.com/contest/\" + this.props.item.id;\n        if(this.props.item.startTimeSeconds > unix) link = \"\";\n        this.setState({\n            time: formatJSDate(dateObj),\n            link: link,\n        })\n        console.log(\"Contest Item Mounted\");\n        if(this.props.type === 1)\n        {\n            \n        this.interval = setInterval(() => {\n            let unix = new Date().getTime() / 1000;\n            let time = this.props.item.startTimeSeconds;\n            let timeleft = time - unix;\n            let days = Math.floor(timeleft / (3600 * 24));\n            timeleft = timeleft % (3600 * 24);\n            let hours = Math.floor(timeleft / 3600);\n            timeleft = timeleft % 3600;\n            let min = Math.floor(timeleft / 60);\n            timeleft = timeleft % 60;\n            let seconds = Math.floor(timeleft);\n            let formattedTime = hours + \"h:\" + min + \"m:\" +seconds + \"s\";\n            var str = \"Days: \" + days;\n            if(!days)\n            {\n                str=\"Today\"\n            }\n            this.setState({\n                timeleft: formattedTime,\n                days: str,\n            })\n        },1000);\n    }\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n\n    render() {\n\n        let isLoggedIn = this.props.type;\n        const renderAuthButton = ()=> {\n        if(isLoggedIn === 1){\n            return <td>{this.state.days} <br/> {this.state.timeleft} </td>\n          }\n        }\n        \n        return (\n                <tr>\n                    <td>{this.props.num}</td>\n                    <td>{this.state.time}</td>\n                    <td><a href={this.state.link}>{ this.props.item.name}</a></td>\n                    {renderAuthButton()}\n                </tr>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ContestItem from './SubComponents/contestitem.js'\nimport { fetchContests } from '../../actions/cfactions'\n\nexport class Upcoming extends Component {\n    componentDidMount() {\n        if(this.props.fetched===0) this.props.fetchContests();\n        console.log(\"Upcoming is loaded\");\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Time Left</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.upcominglist.map((contest, index) => (\n                            <ContestItem key={index} item={contest} num={index + 1} type={1} />\n                        ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nUpcoming.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    upcominglist: state.contest.upcominglist,\n})\n\nexport default connect(mapStateToProps, { fetchContests })(Upcoming)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ContestItem from '../SubComponents/contestitem.js'\nimport { fetchContests } from '../../../actions/cfactions'\n\nexport class Div1 extends Component {\n    componentDidMount() {\n        if(this.props.fetched===0) this.props.fetchContests();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.Div1list.map((contest, index) => (\n                            <ContestItem key={index} item={contest} num={index + 1} type={0} />\n                        ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nDiv1.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    Div1list: state.contest.div1list,\n})\n\nexport default connect(mapStateToProps, { fetchContests })(Div1)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ContestItem from '../SubComponents/contestitem.js'\nimport { fetchContests } from '../../../actions/cfactions'\n\nexport class Div2 extends Component {\n    componentDidMount() {\n        if(this.props.fetched===0) this.props.fetchContests();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.Div2list.map((contest, index) => (\n                            <ContestItem key={index} item={contest} num={index + 1} type={0} />\n                        ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nDiv2.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    Div2list: state.contest.div2list,\n})\n\nexport default connect(mapStateToProps, { fetchContests })(Div2)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ContestItem from '../SubComponents/contestitem.js'\nimport { fetchContests } from '../../../actions/cfactions'\n\nexport class Div3 extends Component {\n    componentDidMount() {\n        if(this.props.fetched===0) this.props.fetchContests();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.Div3list.map((contest, index) => (\n                            <ContestItem key={index} item={contest} num={index + 1} type={0} />\n                        ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nDiv3.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    Div3list: state.contest.div3list,\n})\n\nexport default connect(mapStateToProps, { fetchContests })(Div3)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ContestItem from '../SubComponents/contestitem.js'\nimport { fetchContests } from '../../../actions/cfactions'\n\nexport class Global extends Component {\n    componentDidMount() {\n        if(this.props.fetched===0) this.props.fetchContests();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.Globallist.map((contest, index) => (\n                            <ContestItem key={index} item={contest} num={index + 1} type={0} />\n                        ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nGlobal.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    Globallist: state.contest.globallist,\n})\n\nexport default connect(mapStateToProps, { fetchContests })(Global)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ContestItem from '../SubComponents/contestitem.js'\nimport { fetchContests } from '../../../actions/cfactions'\n\nexport class CFLIST extends Component {\n    componentDidMount() {\n        if(this.props.fetched===0) this.props.fetchContests();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.CFLISTlist.map((contest, index) => (\n                            <ContestItem key={index} item={contest} num={index + 1} type={0} />\n                        ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nCFLIST.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    CFLISTlist: state.contest.cflist,\n})\n\nexport default connect(mapStateToProps, { fetchContests })(CFLIST)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ContestItem from '../SubComponents/contestitem.js'\nimport { fetchContests } from '../../../actions/cfactions'\n\nexport class Ioilist extends Component {\n    componentDidMount() {\n        if(this.props.fetched===0) this.props.fetchContests();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.Ioilistlist.map((contest, index) => (\n                            <ContestItem key={index} item={contest} num={index + 1} type={0} />\n                        ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nIoilist.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    Ioilistlist: state.contest.ioilist,\n})\n\nexport default connect(mapStateToProps, { fetchContests })(Ioilist)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport ContestItem from '../SubComponents/contestitem.js'\nimport { fetchContests } from '../../../actions/cfactions'\n\nexport class Icpclist extends Component {\n    componentDidMount() {\n        if(this.props.fetched===0) this.props.fetchContests();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Name</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.Icpclistlist.map((contest, index) => (\n                            <ContestItem key={index} item={contest} num={index + 1} type={0} />\n                        ))}\n                    </tbody>\n                </table>\n            </React.Fragment>\n        )\n    }\n}\n\nIcpclist.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    Icpclistlist: state.contest.icpclist,\n})\n\nexport default connect(mapStateToProps, { fetchContests })(Icpclist)\n\n","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div >\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Label</th>\n                            <th scope=\"col\">Count</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                    <td> 1.</td>\n                    <td>Total </td>\n                    <td>{this.props.counts.total}</td>\n                    </tr>\n                    <tr>\n                    <td>2.</td>\n                    <td>Upcoming </td>\n                    <td>{this.props.counts.upcoming}</td>\n                    </tr>\n                    <tr>\n                    <td>3.</td>\n                    <td>Division 1 </td>\n                    <td>{this.props.counts.div1}</td>\n                    </tr>\n                    <tr>\n                    <td>4.</td>\n                    <td>Division 2 </td>\n                    <td>{this.props.counts.div2}</td>\n                    </tr>\n                    <tr>\n                    <td>5.</td>\n                    <td>Division 3 </td>\n                    <td>{this.props.counts.div3}</td>\n                    </tr>\n                    <tr>\n                    <td>6.</td>\n                    <td>Global </td>\n                    <td>{this.props.counts.global}</td>\n                    </tr>\n                    <tr>\n                    <td>7.</td>\n                    <td>Code Forces Format </td>\n                    <td>{this.props.counts.cf}</td>\n                    </tr>\n                    <tr>\n                    <td>8.</td>\n                    <td>IOI Format</td>\n                    <td>{this.props.counts.ioi}</td>\n                    </tr>\n                    <tr>\n                    <td>9.</td>\n                    <td>ICPC Format</td>\n                    <td>{this.props.counts.icpc}</td>\n                    </tr>\n                    </tbody>\n                </table> \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { HashRouter, Route } from 'react-router-dom'\nimport { Switch } from \"react-router-dom\";\n\nimport { fetchContests } from '../../actions/cfactions'\nimport { Link } from 'react-router-dom'\nimport Upcoming from './Upcoming'\nimport Div1 from './Type/Div1.js';\nimport Div2 from './Type/Div2.js';\nimport Div3 from './Type/Div3.js';\nimport Global from './Type/global';\nimport  CFLIST  from './Format/Cf';\nimport  Ioilist  from './Format/Ioi';\nimport  Icpclist  from './Format/Icpc';\nimport Home from './Home';\n\nexport class ContestInfo extends Component {\n    componentDidMount() {\n        if(this.props.fetched === 0) this.props.fetchContests();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <HashRouter>\n                    <nav className=\"navbar navbar-expand-sm bg-light navbar-light justify-content-center nav-tabs\">\n                        <ul className=\"navbar-nav \">\n                            <li className=\"nav-item\">\n                                <Link to={`/contests/`} className=\"nav-link\"> {\"<\"} </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                            <Link to={`/contests/upcoming/`} className=\"nav-link\"> Upcoming </Link>\n                            </li>\n                            <li className=\"nav-item dropdown\">\n                                <Link to={'#'} className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Type</Link>\n                                <div class=\"dropdown-menu bg-light\">\n                                <Link to={`/contests/div1`} className=\"dropdown-item \"> Div 1 </Link>\n                                <Link to={`/contests/div2`} className=\"dropdown-item \"> Div 2 </Link>\n                                <Link to={`/contests/div3`} className=\"dropdown-item \"> Div 3 </Link>\n                                <Link to={`/contests/global`} className=\"dropdown-item \"> Global </Link>\n                                </div>\n                            </li>\n                            <li className=\"nav-item dropdown\">\n                                <Link to={'#'} className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Format</Link>\n                                <div class=\"dropdown-menu bg-light\">\n                                <Link to={`/contests/format/cf`} className=\"dropdown-item \"> CF </Link>\n                                <Link to={`/contests/format/ioi`} className=\"dropdown-item \"> IOI</Link>\n                                <Link to={`/contests/format/icpc`} className=\"dropdown-item \"> ICPC </Link>\n                                </div>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <br/>\n\n                    \n\n                    <Switch> \n                        <Route path='/contests/' exact component={() => (<Home counts={this.props.counts} style={{margin: \"auto\"}}/>)  }>\n                        </Route>\n                        <Route path='/contests/upcoming/' exact component={Upcoming}></Route>\n                        <Route path='/contests/div1/' exact component={Div1}></Route>\n                        <Route path='/contests/div2/' exact component={Div2}></Route>\n                        <Route path='/contests/div3/' exact component={Div3}></Route>\n                        <Route path='/contests/global/' exact component={Global}></Route>\n                        <Route path='/contests/format/cf/' exact component={CFLIST}></Route>\n                        <Route path='/contests/format/ioi/' exact component={Ioilist}></Route>\n                        <Route path='/contests/format/icpc/' exact component={Icpclist}></Route>\n                    </Switch>\n\n                </HashRouter>\n            </React.Fragment>\n        )\n    }\n}\n\nContestInfo.propTypes = {\n    fetchContests: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    fetched: state.contest.fetched,\n    counts: state.contest.count\n})\n\nexport default connect(mapStateToProps, { fetchContests })(ContestInfo)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { HashRouter, Route } from 'react-router-dom'\nimport { Switch } from \"react-router-dom\";\nimport Users from './Users/Users'\n\nimport ContestInfo from './Contests/ContestInfo'\n//import { Link } from 'react-router-dom'\n\n/* Available data :\n\n1. this.props.name\n2. this.props.info\n-------------------Data structure for info -----------------------------------------\n\n\n\n{\n      contribution: -1,\n      lastOnlineTimeSeconds: 1,\n      rating: ,\n      friendOfCount: 0,\n      titlePhoto: '//userpic.codeforces.com/no-title.jpg',\n      rank: '',\n      handle: '-e',\n      maxRating: ,\n      avatar: '//userpic.codeforces.com/no-avatar.jpg',\n      registrationTimeSeconds: 1571594608,\n      maxRank: ''\n},\n\n    \n\n3. this.props.ratinghist\n\n------------------- Data structure for ratinghist --------------------------------- ratinghist is array so each array element is as shown\n\nratinghist: [\n      {\n        contestId: 1,\n        contestName: '',\n        handle: 'name of the user',\n        rank: his rank,\n        ratingUpdateTimeSeconds: 1571936700,\n        oldRating: rating old,\n        newRating: rating new,\n      },\n\t]\n\n4. this.props.usersubmissions\n\n------ It have the following data -------- Make sure this.props.usersubmissions[i] exists before checking out this.props.usersubmissions[i].id or contestId\n\n       {\n          \"id\": -1,\n          \"contestId\": -1,\n          \"creationTimeSeconds\": 0,\n          \"relativeTimeSeconds\": 0,\n          \"problem\": {\n            \"contestId\": 0,\n            \"index\": \"1\",\n            \"name\": \"\",\n            \"type\": \"\",\n            \"points\": 1,\n            \"rating\": 1,\n            \"tags\": [\n              \"-\",\n              \"-\",\n              \"-\"\n            ]\n          },\n          \"author\": {\n            \"contestId\": 1,\n            \"members\": [\n              {\n                \"handle\": \"\"\n              }\n            ],\n            \"participantType\": \"PRACTICE\",\n            \"ghost\": false,\n            \"startTimeSeconds\": 1\n          },\n          \"programmingLanguage\": \"GNU C++14\",\n          \"verdict\": \"OK\",\n          \"testset\": \"TESTS\",\n          \"passedTestCount\": 66,\n          \"timeConsumedMillis\": 296,\n          \"memoryConsumedBytes\": 1638400\n        }]\n\n*/\n\nclass Main extends Component {\n\n  chartRef = React.createRef();\n\n  render() {\n    return (\n      <React.Fragment>\n        <HashRouter>\n          <div>\n            <div className=\"row\">\n              <div className=\"col-sm-1\"></div>\n              <div className=\"col-sm-10\">\n                <Switch>\n                  <Route path='/contests/' component={ContestInfo}></Route>\n                  <Route path='/' component={Users}></Route>\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </HashRouter>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(null, null)(Main);","import { FETCH_USER, FETCH_RATINGHIST, FETCH_USUBMISSIONS } from '../actions/types';\n\nconst initialState = {\n  userExists: 0,\n  name: '',\n  info: {\n    contribution: '',\n    lastOnlineTimeSeconds: '',\n    rating: '',\n    friendOfCount: '',\n    titlePhoto: '',\n    rank: '',\n    handle: '-e',\n    maxRating: '',\n    avatar: '',\n    registrationTimeSeconds: '',\n    maxRank: ''\n  },\n  tags: [],\n  verdicts: [],\n  problemsbytags: [],\n  byverdict: [],\n  ratinghist: [],\n  usersubmissions: [\n    {\n      \"id\": -1,\n      \"contestId\": -1,\n      \"creationTimeSeconds\": 0,\n      \"relativeTimeSeconds\": 0,\n      \"problem\": {\n        \"contestId\": 0,\n        \"index\": \"1\",\n        \"name\": \"\",\n        \"type\": \"\",\n        \"points\": 1,\n        \"rating\": 1,\n        \"tags\": [\n          \"-\",\n          \"-\",\n          \"-\"\n        ]\n      },\n      \"author\": {\n        \"contestId\": 1,\n        \"members\": [\n          {\n            \"handle\": \"\"\n          }\n        ],\n        \"participantType\": \"PRACTICE\",\n        \"ghost\": false,\n        \"startTimeSeconds\": 1\n      },\n      \"programmingLanguage\": \"GNU C++14\",\n      \"verdict\": \"OK\",\n      \"testset\": \"TESTS\",\n      \"passedTestCount\": 66,\n      \"timeConsumedMillis\": 296,\n      \"memoryConsumedBytes\": 1638400\n    }]\n}\n\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n    case FETCH_USER:\n      if (action.payload.result) {\n        return {\n          ...state,\n          name: action.payload.result[0].handle,\n          info: action.payload.result[0],\n          userExists: action.userExists\n        };\n      }\n      else {\n        return {\n          ...state,\n          name: 'User_Not_Found',\n          //info: initialState.info,\n          userExists: action.userExists\n        };\n      }\n    case FETCH_RATINGHIST:\n      {\n        return {\n          ...state,\n          ratinghist: action.payload.result,\n          name: action.name\n        };\n      }\n    case FETCH_USUBMISSIONS:\n      {\n        console.log(\"Submissions\");\n        console.log(action.verdict);\n        return {\n          ...state,\n          usersubmissions: action.payload.result,\n          problemsbytags: action.problemsbytags,\n          tags: action.tags,\n          verdicts: action.verdicts,\n          byverdict: action.byverdict,\n          name: action.name\n        };\n      }\n  }\n}","import { FETCH_CONTESTS } from '../actions/types';\n\nconst initialstate = {\n    contestlist: [],\n    upcominglist: [],\n    div1list: [],\n    div2list: [],\n    div3list: [],\n    globallist: [],\n    cflist: [],\n    icpclist: [],\n    ioilist: [],\n    fetched: 0,\n    count: {\n        div1: 0,\n        div2: 0,\n        div3: 0,\n        ioi:0,\n        icpc: 0,\n        cf: 0,\n        global: 0,\n        upcoming: 0,\n        total: 0,\n    }\n}\n\nexport default function(state = initialstate,action) {\n    switch(action.type)\n    {\n        default:\n            return state;\n        case FETCH_CONTESTS:\n            console.log(action.div1list);\n            return {\n                ...state,\n                contestlist: action.payload.result,\n                upcominglist: action.upcoming,\n                div1list: action.div1list,\n                div2list: action.div2list,\n                div3list: action.div3list,\n                globallist: action.globallist,\n                cflist: action.cflist,\n                icpclist: action.icpclist,\n                ioilist: action.ioilist,\n                fetched: 1,\n                count: action.count,\n            };\n    }\n}","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport contestReducer from './cfReducer';\n\nexport default combineReducers({\n    contest: contestReducer,\n    user: userReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Main from './Components/Main';\n\nimport store from './store'\nimport { HashRouter } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker();\n  return (\n    promiseInProgress &&\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Loader type=\"Oval\" color=\"#808080\" height=\"50\" width=\"50\" />\n    </div>\n  );\n}\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <div>\n          <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark scrolling-navbar \">\n            <div>\n              <a class=\"navbar-brand \" href=\"/\"><strong>Codux</strong></a>\n            </div>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\"></span>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n              <ul className=\"navbar-nav ml-auto work\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n                <li className=\"nav-item\">\n                  <Link to={`/contests`} className=\"nav-link\"> Contests </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={`/`} className=\"nav-link\"> Search </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"https://github.com/pulkit1joshi/Codux-Profile\">Git</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/\">About</a>\n                </li>\n              </ul>\n            </div>\n\n\n          </nav>\n        </div>\n\n        <div className=\"container\" style={{ paddingBottom: \"60px;\" }}>\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h1 className=\"mt-5  text-center\">Codux</h1>\n              <p className=\"lead  text-center\">Check your coding profile at <img\n                src=\"https://sta.codeforces.com/s/70808/images/codeforces-logo-with-telegram.png\" alt=\"Codeforces\"\n                style={{ width: \"15%\", height: \"15%\" }}></img>\n              </p>\n\n              <div className=\"App\">\n                <LoadingIndicator />\n                <hr />\n\n                <Main />\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<div> <App /></div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}